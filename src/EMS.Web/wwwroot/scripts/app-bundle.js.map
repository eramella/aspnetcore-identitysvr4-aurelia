{"version":3,"sources":["auth.ts","app.ts","callback.ts","environment.ts","home.ts","login.ts","main.ts","resources/index.ts","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/app.html","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/callback.html","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/home.html","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/login.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { UserManager, OidcClient } from 'oidc-client';\r\nimport { Router, Redirect } from 'aurelia-router';\r\nimport { inject, singleton } from 'aurelia-framework';\r\n\r\n//@singleton\r\n@inject(Router)\r\nexport class Auth {\r\n    oidcUserManager: UserManager;\r\n    router: Router;\r\n    user: Oidc.User;\r\n    settings: Oidc.UserManagerCtor = {\r\n        authority: \"http://localhost:1861\",\r\n        client_id: \"ems\",\r\n        redirect_uri: \"http://localhost:1861/spa/callback.html\",\r\n        response_type: \"id_token token\",\r\n        scope: \"openid profile api.todo\"\r\n    };\r\n\r\n    constructor(router) {\r\n        this.router = router;\r\n        this.oidcUserManager = new UserManager(this.settings);\r\n        console.log(\"Auth contructor\");\r\n    }\r\n\r\n    loadLocalUser() {\r\n        return this.oidcUserManager.getUser().then(function (u) {\r\n            if (u) {\r\n                console.log(\"User loaded\", u);\r\n                return u;\r\n            }\r\n            else {\r\n                console.log(\"no user loaded\");\r\n            }\r\n        });\r\n    }\r\n\r\n    login() {\r\n        console.log(\"auth login\");\r\n        this.oidcUserManager.signinRedirect().then(function () {\r\n            console.log(\"redirecting for login...\");\r\n            debugger;\r\n        })\r\n            .catch(function (er) {\r\n                console.log(\"Sign-in error\", er);\r\n            });\r\n    }\r\n\r\n    callback() {\r\n        console.log(\"auth callback\");\r\n        debugger;\r\n        let that = this;\r\n        return this.oidcUserManager.signinRedirectCallback().then(function (callBackUser) {\r\n            if (callBackUser == null) {\r\n                console.error(\"No sign-in request pending.\");\r\n                //new Redirect('http://localhost:1861/account/login');                \r\n            }\r\n            else {\r\n                console.log('callback user found and confirmed');\r\n                //that.router.navigate('home');\r\n                debugger;\r\n                window.location.href = 'index.html';\r\n            }\r\n            return callBackUser;\r\n        })\r\n            .catch(function (er) {\r\n                console.error(er.message);\r\n            });\r\n    }\r\n\r\n    isAuthenticated(): boolean {\r\n        if (this.user) return true;\r\n        return false;\r\n    }\r\n}","import { Redirect, NavigationInstruction, RouterConfiguration, Router } from 'aurelia-router'\r\nimport { Auth } from './auth';\r\nimport { inject } from 'aurelia-framework';\r\n\r\nexport class App {\r\n    configureRouter(config: RouterConfiguration, router: Router): void {\r\n        config.title = 'Asp.net Core - IdentitySvr4 - Aurelia';\r\n        //config.addPipelineStep('authorize', AuthorizeStep);\r\n        config.map([\r\n            { route: ['', 'home'], name: 'home', moduleId: 'home' }\r\n            //{ route: 'login', name: 'login', moduleId: 'login' }\r\n        ]);\r\n    }\r\n}\r\n\r\n// @inject(Auth)\r\n// class AuthorizeStep {\r\n//     auth: Auth;\r\n\r\n//     constructor(auth) {\r\n//         console.log('AuthorizeStep contructor');\r\n//         this.auth = auth;\r\n//     }\r\n\r\n//     run(navigationInstruction: NavigationInstruction, next: any): Promise<any> {\r\n//         console.log(\"AuthorizeStep run\");\r\n//         if (!this.auth.isAuthenticated()) {\r\n//             if (navigationInstruction.getAllInstructions().some(i => {\r\n//                 console.log(i.config); \r\n//                 return i.config.href && i.config.href.indexOf('#id_token') > -1\r\n//             })) {\r\n//             //if (window.location.href.indexOf('callback.html#id_token') > -1) {\r\n//                 console.log(\"found callback\");\r\n//                 return this.auth.callback().then(function(){\r\n//                     next.cancel(new Redirect('http://localhost:1861/index.html#home'));\r\n//                 });\r\n//                 // if (!isLoggedIn) {\r\n//                      //return next.cancel(new Redirect('login'));\r\n//                 // }\r\n//             }\r\n//             else{\r\n//                 console.log(\"go to login\");\r\n//                 return next.cancel(new Redirect('http://localhost:1861/index.html#login')); //this.auth.login();\r\n//                 //return next.cancel()\r\n//             }\r\n//         }\r\n//         return next();\r\n//     }\r\n\r\n// }","export class Callback{\r\n    \r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","export class Home {\r\n    \r\n}","import { Auth } from './auth';\r\nimport { inject } from 'aurelia-framework'\r\n\r\n@inject(Auth)\r\nexport class Login {\r\n    auth : Auth;\r\n\r\n    constructor(auth) {\r\n        console.log(\"login constructor\");\r\n        this.auth = auth;\r\n        this.auth.login();\r\n    }\r\n}","import { Aurelia } from 'aurelia-framework'\r\nimport environment from './environment';\r\nimport { Auth } from './auth';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n//kjh\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use.singleton(Auth);\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n  console.log('IM HERE');\r\n  aurelia.start().then(() => {\r\n    let auth: Auth = aurelia.container.get(Auth);\r\n    auth.loadLocalUser().then(user => {\r\n      if (user) {\r\n        console.log(user);\r\n        auth.user = user;\r\n        aurelia.setRoot();\r\n      } else {\r\n        if (aurelia.host.baseURI.indexOf('#id_token') > -1) {\r\n          console.log('is callback');\r\n          //auth.callback();\r\n          // .then(u => {\r\n          //   if (u) aurelia.setRoot('home');\r\n          // });\r\n        } else {\r\n          console.log('need login');\r\n          // if (auth.isAuthenticated()) {\r\n          //   aurelia.setRoot();\r\n          // }\r\n          auth.login();\r\n        }\r\n      }\r\n    })\r\n  });\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null,null],"sourceRoot":"..\\..\\src"}