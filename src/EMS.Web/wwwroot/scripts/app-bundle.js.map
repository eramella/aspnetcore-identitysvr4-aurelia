{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","d:/Visual Studio 2015/EmaSource/EMS2/src/EMS.Web/src/app.html"],"names":[],"mappings":";;;;;;;;;;;IAOA;QAeE,aAAY,WAAW,EAAE,IAAI;YAd7B,YAAO,GAAG,cAAc,CAAC;YAIzB,QAAG,GAAS,8BAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAExC,aAAQ,GAAG;gBACD,SAAS,EAAE,uBAAuB;gBAClC,SAAS,EAAE,KAAK;gBAChB,YAAY,EAAE,yCAAyC;gBACvD,aAAa,EAAE,gBAAgB;gBAC/B,KAAK,EAAC,yBAAyB;aAClC,CAAC;YAGJ,IAAI,CAAC,eAAe,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxD,CAAC;QAEH,sBAAQ,GAAR;YAEE,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;gBACvC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACJ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBAClB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAClC,CAAC;YACL,CAAC,CAAC,CAAC;QACT,CAAC;QAED,mBAAK,GAAL;YACE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YAC5C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACb,CAAC;QAzCH;YAAC,0BAAM,CAAC,WAAW,EAAE,UAAU,EAAC,8BAAU,CAAC;;eAAA;QA4C3C,UAAC;IAAD,CA3CA,AA2CC,IAAA;IA3CY,WAAG,MA2Cf,CAAA;;;;;IClDD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD","file":"app-bundle.js","sourcesContent":["/// <reference path=\"../node_modules/oidc-client/oidc-client.d.ts\" />\n\nimport {UserManager, OidcClient,Log} from 'oidc-client';\nimport {inject, LogManager} from 'aurelia-framework'\n\n\n@inject(UserManager, OidcClient,LogManager)\nexport class App {\n  message = 'Hello World!';\n  oidcUserManager : UserManager;\n  user : any;\n  oidc : OidcClient;\n  log : any = LogManager.getLogger('app');\n\n  settings = {\n            authority: \"http://localhost:1861\",\n            client_id: \"ems\",\n            redirect_uri: \"http://localhost:1861/spa/callback.html\",\n            response_type: \"id_token token\",\n            scope:\"openid profile api.todo\"\n        };\n\n  constructor(userManager, oidc){\n      this.oidcUserManager = new UserManager(this.settings);      \n    }\n\n  activate(){\n    //this.log.logger(console);\n    this.oidcUserManager.getUser().then(function (u) {\n            if (u) {\n                console.log(\"User loaded\", u);\n                this.user = u;\n            }\n            else {\n                console.log(\"no user loaded\");\n            }\n        });\n  }\n\n  login(){\n    console.log(\"clicked login\");\n    this.oidcUserManager.signinRedirect().then(function () {\n                console.log(\"redirecting for login...\");\n            })\n            .catch(function (er) {\n                console.log(\"Sign-in error\", er);\n            });\n  }\n  \n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"..\\..\\src"}