{"version":3,"sources":["app.ts","callback.ts","environment.ts","login.ts","main.ts","resources/index.ts","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/app.html","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/callback.html","c:/Dev/Github/aspnetcore-identitysvr4-aurelia/src/EMS.Web/src/login.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration,Router} from 'aurelia-router'\r\n\r\nexport class App {\r\n  router : Router;  \r\n  \r\n  configureRouter(config: RouterConfiguration, router: Router) : void {\r\n      this.router = router;\r\n      config.title = 'Asp.net Core - IdentitySvr4 - Aurelia';\r\n      config.map([\r\n          {route: '', name: 'login', moduleId: 'login'},\r\n          {route: 'callback', name: 'callback', moduleId: 'callback'}\r\n      ]);\r\n  }\r\n}\r\n","export class Callback{\r\n    \r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","/// <reference path=\"../node_modules/oidc-client/oidc-client.d.ts\" />\r\n\r\n\r\nimport { UserManager } from 'oidc-client';\r\nimport { inject } from 'aurelia-framework'\r\n\r\n@inject(UserManager)\r\nexport class Login {\r\n    oidcUserManager: UserManager;\r\n    user: Oidc.User;\r\n    settings: Oidc.UserManagerCtor = {\r\n        authority: \"http://localhost:1861\",\r\n        client_id: \"ems\",\r\n        redirect_uri: \"http://localhost:1861/callback.html\",\r\n        response_type: \"id_token token\",\r\n        scope: \"openid profile api.todo\"\r\n    };\r\n\r\n    constructor(userManager) {\r\n        this.oidcUserManager = new UserManager(this.settings);\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"login activate\");\r\n        let that = this;\r\n        this.oidcUserManager.getUser().then(function (u) {\r\n            if (u) {\r\n                console.log(\"User loaded\", u);\r\n                that.user = u;\r\n            }\r\n            else {\r\n                console.log(\"no user loaded\");\r\n            }\r\n        });\r\n    }\r\n\r\n    login() {\r\n        console.log(\"clicked login\");\r\n        this.oidcUserManager.signinRedirect().then(function () {\r\n            console.log(\"redirecting for login...\");\r\n        })\r\n            .catch(function (er) {\r\n                console.log(\"Sign-in error\", er);\r\n            });\r\n    }\r\n}","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null],"sourceRoot":"..\\..\\src"}